"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.orderZodSchema = void 0;
const mongoose_1 = __importDefault(require("mongoose"));
const zod_1 = require("zod");
// Zod schema for validating ObjectId
const objectIdSchema = zod_1.z
    .string()
    .refine((value) => mongoose_1.default.Types.ObjectId.isValid(value), {
    message: 'Invalid ObjectId',
});
// Zod schema for validating IOrder
exports.orderZodSchema = zod_1.z.object({
    email: zod_1.z.string().email('Invalid email format!'),
    car: objectIdSchema,
    quantity: zod_1.z
        .number()
        .min(1, 'Quantity must be at least 1!')
        .nonnegative('Quantity can not be negative!')
        .int('Quantity must be an integer!'),
    totalPrice: zod_1.z
        .number()
        .min(0, 'Total price cannot be negative!')
        .nonnegative('Quantity can not be negative!'),
    createdAt: zod_1.z.date().optional(), // Auto-generated by Mongoose, can be optional in validation
    updatedAt: zod_1.z.date().optional(), // Auto-generated by Mongoose, can be optional in validation
});
